version: '3'

services:
  web:
    build:
      context: ./
      dockerfile: Dockerfile.prod
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000 --timeout 60 --workers 5
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env
    restart: always
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres_user
      - POSTGRES_PASSWORD=postgres_password
      - POSTGRES_DB=postgres_database
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    restart: always
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
  redis:
    image: redis:alpine
    restart: always
  celery:
    build:
      context: ./
      dockerfile: Dockerfile.prod
    command: celery -A core worker -l info
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    env_file:
      - ./.env
    depends_on:
      - redis
    restart: always
volumes:
  postgres_data:
  static_volume:
  media_volume:
